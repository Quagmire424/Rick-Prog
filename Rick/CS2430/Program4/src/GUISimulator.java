
/**

 @author Timothy Allen and Nick Kvigne
 */
public class GUISimulator extends javax.swing.JFrame
{

   private Simulation sim = new Simulation();

   /**
    Creates new form GUISimulator
    */
   public GUISimulator()
   {
      initComponents();
   }

   /**
    This method is called from within the constructor to initialize the form.
    WARNING: Do NOT modify this code. The content of this method is always
    regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      jPanel1 = new javax.swing.JPanel();
      Arrive = new javax.swing.JButton();
      Leave = new javax.swing.JButton();
      Clock = new javax.swing.JButton();
      Statistics = new javax.swing.JButton();
      beingServedText = new javax.swing.JTextField();
      waitingText = new javax.swing.JTextField();
      jScrollPane1 = new javax.swing.JScrollPane();
      output = new javax.swing.JTextArea();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      clockText = new javax.swing.JTextField();

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 100, Short.MAX_VALUE)
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 100, Short.MAX_VALUE)
      );

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Prog 4 GUISimulator");

      Arrive.setText("Arrive");
      Arrive.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            ArriveActionPerformed(evt);
         }
      });

      Leave.setText("Leave");
      Leave.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            LeaveActionPerformed(evt);
         }
      });

      Clock.setText("Clock +1");
      Clock.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            ClockActionPerformed(evt);
         }
      });

      Statistics.setText("Statistics");
      Statistics.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            StatisticsActionPerformed(evt);
         }
      });

      beingServedText.setText("N/A");

      waitingText.setText("0");

      output.setColumns(20);
      output.setRows(5);
      jScrollPane1.setViewportView(output);

      jLabel1.setText("Platteville Burger waiting line Simulation");

      jLabel2.setText("Clock");

      jLabel3.setText("Customer being Served");

      jLabel4.setText("Number of Customers Waiting");

      clockText.setText("0");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(55, 55, 55)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(Arrive)
                     .addComponent(Leave)
                     .addComponent(Clock))
                  .addGap(80, 80, 80)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel2)
                     .addComponent(waitingText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel4)
                     .addComponent(beingServedText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel3)
                     .addComponent(clockText, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
               .addComponent(jLabel1)
               .addComponent(Statistics)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel1)
                  .addGap(31, 31, 31)
                  .addComponent(Arrive))
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel2)
                  .addGap(11, 11, 11)
                  .addComponent(clockText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(Leave)
               .addGroup(layout.createSequentialGroup()
                  .addGap(11, 11, 11)
                  .addComponent(jLabel3)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(beingServedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(18, 18, 18)
                  .addComponent(Clock))
               .addGroup(layout.createSequentialGroup()
                  .addGap(11, 11, 11)
                  .addComponent(jLabel4)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(waitingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(92, 92, 92)
            .addComponent(Statistics)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void ArriveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ArriveActionPerformed
   {//GEN-HEADEREND:event_ArriveActionPerformed
      // TODO add your handling code here:

      if (sim.lineFull())

      {
         output.append("A customer couldn't get in the line @time "
               + sim.getClock() + " because the line was full.\n");

      }
      else
      {
         sim.arrive();
         output.append("A customer has arrived @time " + sim.getClock()
               + ". Number of customers waiting in the line: " + sim.size()
               + "\n");
         
         if(sim.size() == 0)
            beingServedText.setText(String.valueOf(sim.currentCustNum()));

      }
      output.append("\n");
      waitingText.setText(String.valueOf(sim.size()));
   }//GEN-LAST:event_ArriveActionPerformed

   private void LeaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_LeaveActionPerformed
   {//GEN-HEADEREND:event_LeaveActionPerformed
      boolean place = sim.storeEmpty();
      int lineSize;

      if (sim.size() > 0)
      {
         lineSize = sim.size() - 1;
      }
      else
      {
         lineSize = 0;
      }
      if (place)
      {
         output.append("Nobody is being served @time " + sim.getClock()
               + ".\n");
         beingServedText.setText("N/A");         
      }
      else
      {
         output.append(sim.currentCust() + " finished @time "
               + sim.getClock() + ". Number of customers waiting: "
               + Integer.toString(lineSize) + ".\n");
         sim.leave();         
         if(sim.size() <= 0)
         {
            beingServedText.setText("N/A");
         }
         else
         {
         beingServedText.setText(String.valueOf(sim.currentCustNum()));
         }
      }
      output.append("\n");
      waitingText.setText(String.valueOf(sim.size()));
   }//GEN-LAST:event_LeaveActionPerformed

   private void ClockActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ClockActionPerformed
   {//GEN-HEADEREND:event_ClockActionPerformed
      sim.updateClock(1);
      String clock = String.valueOf(sim.getClock());
      clockText.setText(clock);


   }//GEN-LAST:event_ClockActionPerformed

   private void StatisticsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_StatisticsActionPerformed
   {//GEN-HEADEREND:event_StatisticsActionPerformed
      // TODO add your handling code here:
      output.append("\nThe average wait time for the customers who "
            + "finished waiting: ");
      if (sim.getWaited() == 0)
      {
         output.append("0.0.\n");
      }
      else
      {
         output.append(sim.average() + ".\n");
      }

      output.append("The total wait time is " + sim.getTotalWait() + ".\n");
      output.append("The number of customers finished: "
            + sim.getFinished() + ".\n");
      output.append("The number of customers who did not have to "
            + "wait: " + sim.getNoWait() + ".\n\n");

   }//GEN-LAST:event_StatisticsActionPerformed

   /**
    @param args the command line arguments
    */
   public static void main(String args[])
   {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try
      {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
         {
            if ("Nimbus".equals(info.getName()))
            {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      }
      catch (ClassNotFoundException ex)
      {
         java.util.logging.Logger.getLogger(GUISimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      catch (InstantiationException ex)
      {
         java.util.logging.Logger.getLogger(GUISimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      catch (IllegalAccessException ex)
      {
         java.util.logging.Logger.getLogger(GUISimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      catch (javax.swing.UnsupportedLookAndFeelException ex)
      {
         java.util.logging.Logger.getLogger(GUISimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable()
      {
         public void run()
         {
            new GUISimulator().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton Arrive;
   private javax.swing.JButton Clock;
   private javax.swing.JButton Leave;
   private javax.swing.JButton Statistics;
   private javax.swing.JTextField beingServedText;
   private javax.swing.JTextField clockText;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTextArea output;
   private javax.swing.JTextField waitingText;
   // End of variables declaration//GEN-END:variables
}
